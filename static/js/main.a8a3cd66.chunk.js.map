{"version":3,"sources":["contexts/theme.js","portfolio.js","components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/Skills/Skills.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","components/Footer/Footer.js","components/WorkExperienceTimeline/WorkExperienceTimeline.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","themeName","setThemeName","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","Provider","value","toggleTheme","name","localStorage","setItem","header","about","linkedin","github","projects","description","stack","sourceCode","livePreview","skills","contact","experiences","title","company","location","duration","overview","responsibilities","Navbar","useContext","showNavList","setShowNavList","toggleNavList","className","style","display","length","href","onClick","type","Header","homepage","About","role1","role2","resume","social","src","alt","target","rel","ProjectContainer","project","map","item","uniqid","Projects","id","Skills","skill","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","removeEventListener","fontSize","Contact","Footer","WorkExperienceTimeline","experience","responsibility","App","render","document","getElementById"],"mappings":"4YAGMA,EAAeC,0BAEfC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,EAAkCC,mBAAS,SAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACR,IAAMC,EAAiBC,OAAOC,WAAW,iCACzCJ,EAAaE,EAAeG,QAAU,OAAS,SAC/CH,EAAeI,iBAAiB,UAAU,SAACC,GACzCP,EAAaO,EAAEF,QAAU,OAAS,cAEnC,IAQH,OACE,cAACX,EAAac,SAAd,CAAuBC,MAAO,CAAC,CAAEV,YAAWW,YAP1B,WAClB,IAAMC,EAAqB,SAAdZ,EAAuB,QAAU,OAC9Ca,aAAaC,QAAQ,YAAaF,GAClCX,EAAaW,MAIb,SACGd,KCxBDiB,EAEM,wCAFNA,EAGG,OAGHC,EAEE,YAFFA,EAIG,kBAJHA,EAKG,4BALHA,EAOF,82BAPEA,EAQI,yEARJA,EASI,CACNC,SAAU,oCACVC,OAAQ,gCAINC,EAAW,CAGf,CACEP,KAAM,oCACNQ,YAAY,koBAOZC,MAAO,CAAC,SAAU,WAAY,oBAAqB,wBAAyB,cAC5EC,WAAY,GACZC,YAAa,IAEf,CACEX,KAAM,4CACNQ,YAAY,qbAUZC,MAAO,CAAC,SAAU,gBAAiB,YACnCC,WAAY,uDACZC,YAAa,4CAEf,CACEX,KAAM,uCACNQ,YAAY,8nBAOZC,MAAO,CAAC,SAAU,QAAS,SAAU,MAAO,aAC5CC,WAAY,6CACZC,YAAa,KAIXC,EAAS,CAGb,wBACA,SACA,OACA,aACA,MACA,WAEA,yBACA,SACA,QACA,aACA,UACA,YACA,QAEA,mBACA,UACA,MACA,+BACA,MAEA,MACA,kBAEA,aACA,QACA,MAGA,SACA,cACA,SACA,eACA,QACA,kBACA,gBACA,mBAGIC,EAEG,qBAGHC,EAAc,CAClB,CACEC,MAAO,4BACPC,QAAS,qBACTC,SAAU,uBACVC,SAAU,qBACVC,SAAU,0DACVC,iBAAkB,CAChB,kEACA,oHACA,kHACA,gIAGJ,CACEL,MAAO,oBACPC,QAAS,aACTC,SAAU,iBACVC,SAAU,sBACVC,SAAU,mEACVC,iBAAkB,CAChB,4HACA,8NACA,wHACA,iMAGJ,CACEL,MAAO,yBACPC,QAAS,qBACTC,SAAU,eACVC,SAAU,uBACVC,SAAU,yDACVC,iBAAkB,CAChB,kOACA,qLACA,2M,oEC5DSC,G,MAlFA,WACb,MAAqCC,qBAAWvC,GAAhD,sBAASK,EAAT,EAASA,UAAWW,EAApB,EAAoBA,YACpB,EAAsCZ,oBAAS,GAA/C,mBAAOoC,EAAP,KAAoBC,EAApB,KAEMC,EAAgB,kBAAMD,GAAgBD,IAE5C,OACE,sBAAKG,UAAU,aAAf,UACE,qBACEC,MAAO,CAAEC,QAASL,EAAc,OAAS,MACzCG,UAAU,YAFZ,UAIGnB,EAASsB,OACR,oBAAIH,UAAU,iBAAd,SACE,mBACEI,KAAK,YACLC,QAASN,EACTC,UAAU,iBAHZ,wBAQA,KAEHd,EAAOiB,OACN,oBAAIH,UAAU,iBAAd,SACE,mBACEI,KAAK,UACLC,QAASN,EACTC,UAAU,iBAHZ,sBAQA,KAEHZ,EAAYe,OACX,oBAAIH,UAAU,iBAAd,SACE,mBACEI,KAAK,WACLC,QAASN,EACTC,UAAU,iBAHZ,uBAQA,KAEHb,EACC,oBAAIa,UAAU,iBAAd,SACE,mBACEI,KAAK,WACLC,QAASN,EACTC,UAAU,iBAHZ,uBAQA,QAGN,wBACEM,KAAK,SACLD,QAAShC,EACT2B,UAAU,2BACV,aAAW,eAJb,SAMiB,SAAdtC,EAAuB,cAAC,IAAD,IAAyB,cAAC,IAAD,MAGnD,wBACE4C,KAAK,SACLD,QAASN,EACTC,UAAU,+BACV,aAAW,oBAJb,SAMGH,EAAc,cAAC,IAAD,IAAgB,cAAC,IAAD,WC9DxBU,G,MAnBA,WACb,IAAQC,EAAoB/B,EAAVY,EAAUZ,EAE5B,OACE,yBAAQuB,UAAU,gBAAlB,UACE,6BACGQ,EACC,mBAAGJ,KAAMI,EAAUR,UAAU,OAA7B,SACGX,IAGHA,IAGJ,cAAC,EAAD,S,kCCuCSoB,G,MApDD,WACZ,IAAQnC,EAAoDI,EAA9CgC,EAA8ChC,EAAvCiC,EAAuCjC,EAAhCI,EAAgCJ,EAAnBkC,EAAmBlC,EAAXmC,EAAWnC,EAE5D,OACE,sBAAKsB,UAAU,eAAf,UACG1B,GACC,2CACW,uBAAM0B,UAAU,cAAhB,UAA+B1B,EAA/B,UAIZoC,GAAS,qBAAIV,UAAU,cAAd,cAA8BU,EAAM,qBAAKI,IAAI,6BAA6BC,IAAI,QACvFJ,GAAS,qBAAIX,UAAU,cAAd,cAA8BW,KACxC,mBAAGX,UAAU,cAAb,SAA4BlB,GAAeA,IAE3C,sBAAKkB,UAAU,wBAAf,UACGY,GACC,mBAAGR,KAAMQ,EAAQI,OAAO,SAASC,IAAI,sBAArC,SACE,sBAAMX,KAAK,SAASN,UAAU,mBAA9B,sBAMHa,GACC,qCACGA,EAAOjC,QACN,mBACEwB,KAAMS,EAAOjC,OACb,aAAW,SACXoB,UAAU,kBAAkBgB,OAAO,SAASC,IAAI,sBAHlD,SAKE,cAAC,IAAD,MAIHJ,EAAOlC,UACN,mBACEyB,KAAMS,EAAOlC,SACb,aAAW,WACXqB,UAAU,kBAAkBgB,OAAO,SAASC,IAAI,sBAHlD,SAKE,cAAC,IAAD,iB,iCCLDC,G,MArCU,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACvB,sBAAKnB,UAAU,UAAf,UACE,6BAAKmB,EAAQ7C,OAEb,mBAAG0B,UAAU,uBAAb,SAAqCmB,EAAQrC,cAC5CqC,EAAQpC,OACP,oBAAIiB,UAAU,iBAAd,SACGmB,EAAQpC,MAAMqC,KAAI,SAACC,GAAD,OACjB,oBAAmBrB,UAAU,sBAA7B,SACGqB,GADMC,YAOdH,EAAQnC,YACP,mBACEoB,KAAMe,EAAQnC,WACd,aAAW,cACXgB,UAAU,kBAAkBgB,OAAO,SAASC,IAAI,sBAHlD,SAKE,cAAC,IAAD,MAIHE,EAAQlC,aACP,mBACEmB,KAAMe,EAAQlC,YACd,aAAW,eACXe,UAAU,kBAAkBgB,OAAO,SAASC,IAAI,sBAHlD,SAKE,cAAC,IAAD,WCfOM,G,MAhBE,WACf,OAAK1C,EAASsB,OAGZ,0BAASqB,GAAG,WAAWxB,UAAU,mBAAjC,UACE,oBAAIA,UAAU,iBAAd,sBAEA,qBAAKA,UAAU,iBAAf,SACGnB,EAASuC,KAAI,SAACD,GAAD,OACZ,cAAC,EAAD,CAAiCA,QAASA,GAAnBG,eARF,OCehBG,G,MAjBA,WACb,OAAKvC,EAAOiB,OAGV,0BAASH,UAAU,iBAAiBwB,GAAG,SAAvC,UACE,oBAAIxB,UAAU,iBAAd,oBACA,oBAAIA,UAAU,eAAd,SACGd,EAAOkC,KAAI,SAACM,GAAD,OACV,oBAAmB1B,UAAU,mCAA7B,SACG0B,GADMJ,eAPU,O,iBCmBdK,G,MApBK,WAClB,MAAkClE,oBAAS,GAA3C,mBAAOmE,EAAP,KAAkBC,EAAlB,KAUA,OARAjE,qBAAU,WACR,IAAMkE,EAAmB,kBACvBhE,OAAOiE,YAAc,IAAMF,GAAa,GAAQA,GAAa,IAG/D,OADA/D,OAAOG,iBAAiB,SAAU6D,GAC3B,kBAAMhE,OAAOkE,oBAAoB,SAAUF,MACjD,IAEIF,EACL,qBAAK5B,UAAU,aAAf,SACE,mBAAGI,KAAK,OAAR,SACE,cAAC,IAAD,CAAiB6B,SAAS,cAG5B,OCHSC,G,MAfC,WACd,OAAK/C,EAGH,0BAASa,UAAU,yBAAyBwB,GAAG,UAA/C,UACE,oBAAIxB,UAAU,iBAAd,qBACA,mBAAGI,KAAI,iBAAYjB,GAAnB,SACE,sBAAMmB,KAAK,SAASN,UAAU,mBAA9B,2BANqB,OCSdmC,G,MAXA,kBACb,wBAAQnC,UAAU,SAAlB,SACE,mBACEI,KAAK,+BACLJ,UAAU,oBAFZ,6CC+CWoC,G,MA9CgB,WAE7B,OAAKhD,EAAYe,OAGf,yBAASH,UAAU,kBAAkBwB,GAAG,UAAxC,SACA,sBAAKxB,UAAU,2BAAf,UAEE,oBAAIA,UAAU,iBAAd,6BACA,qBAAKA,UAAU,WAAf,SACGZ,EAAYgC,KAAI,SAACiB,GAAD,OACf,qBAAoBrC,UAAU,gBAA9B,SACE,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,YAAf,SACI,+BAAKqC,EAAWhD,MAAhB,MAA0BgD,EAAW/C,aAEzC,qBAAKU,UAAU,aAAf,SACI,4BAAIqC,EAAW9C,gBAGrB,sBAAKS,UAAU,gBAAf,UACE,qBAAKA,UAAU,SAAf,SACI,6BAAKqC,EAAW5C,aAEpB,qBAAKO,UAAU,SAAf,SACI,4BAAIqC,EAAW7C,gBAIrB,uBAEA,oBAAIQ,UAAU,mBAAd,SACGqC,EAAW3C,iBAAiB0B,KAAI,SAACkB,GAAD,OAC/B,6BAAoBA,GAAXhB,gBAvBPA,iBATc,OC0BnBiB,G,MArBH,WACV,MAAwB3C,qBAAWvC,GAA1BK,EAAT,oBAASA,UAET,OACE,sBAAK8D,GAAG,MAAMxB,UAAS,UAAKtC,EAAL,QAAvB,UACE,cAAC,EAAD,IAEA,iCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAGF,cAAC,EAAD,IACA,cAAC,EAAD,S,MCvBN8E,iBACE,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a8a3cd66.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ThemeContext = createContext()\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [themeName, setThemeName] = useState('light')\r\n\r\n  useEffect(() => {\r\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: light)');\r\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\r\n    darkMediaQuery.addEventListener('change', (e) => {\r\n      setThemeName(e.matches ? 'dark' : 'light')\r\n    });\r\n  }, [])\r\n\r\n  const toggleTheme = () => {\r\n    const name = themeName === 'dark' ? 'light' : 'dark'\r\n    localStorage.setItem('themeName', name)\r\n    setThemeName(name)\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport { ThemeProvider, ThemeContext }\r\n","const header = {\r\n  // all the properties are optional - can be left empty or deleted\r\n  homepage: 'https://jgdshkovi.github.io/portfolio',\r\n  title: \"I'JK\",\r\n}\r\n\r\nconst about = {\r\n  // all the properties are optional - can be left empty or deleted\r\n  name: 'Jagadeesh',\r\n  // role: 'Jack of all trades and a master of some.',\r\n  role1: 'Data Science@IU',\r\n  role2: 'Ex-Software Engineer@FIS ',\r\n  description:\r\n    \"Jagadeesh Kovi is a passionate Data Science professional and Software Engineer with a proven track record of leveraging technology to drive innovation in the financial services sector. Graduating with a Master's in Data Science from Indiana University Bloomington, Jagadeesh possesses a rich academic foundation complemented by hands-on experience at industry-leading companies like FIS Global. With expertise spanning Python, Java, SQL, and cutting-edge technologies like Azure, he has played pivotal roles in modernizing core banking platforms, enhancing application efficiency, and translating intricate business requirements into tangible solutions. Adept at bridging the gap between technical intricacies and business objectives, Jagadeesh's commitment to excellence, combined with his analytical prowess, makes him a valuable asset in any forward-thinking organization.\",\r\n  resume: 'https://drive.google.com/file/d/1dIPGtgpAFZ5goYG5h6J9GT123S9I74la/view',\r\n  social: {\r\n    linkedin: 'https://linkedin.com/in/jgdshkovi',\r\n    github: 'https://github.com/jgdshkovi',\r\n  },\r\n}\r\n\r\nconst projects = [\r\n  // projects can be added an removed\r\n  // if there are no projects, Projects section won't show up\r\n  {\r\n    name: 'Home Credit Default Risk Analysis',\r\n    description:\r\n      `• Designed and optimized an advanced Multi-Layer Perceptron (MLP) using back-propagation and gradient descent, achieving\r\n      a crucial 68.26% test accuracy, contributing to Home Credit’s lending strategy refinement.\r\n      • Employed feature selection techniques like grid search and cross-validation for hyperparameter tuning, enhancing the Deep\r\n      Learning model to achieve a test F1 score (0.7311) and a public score (0.7537).\r\n      • Executed a varied ensemble strategy with Random Forest, CatBoost, and XGBoost via stacking. Integrated a deep learning\r\n      algorithm, boosting predictive accuracy by 10%.`,\r\n    stack: ['Python', 'Sklearn,', 'Feature Selection', 'Hyperparameter tuning', 'TensorFlow'],\r\n    sourceCode: '',\r\n    livePreview: '',\r\n  },\r\n  {\r\n    name: 'Automated Web Scraping & Google Translate',\r\n    description:\r\n      `• Employed requests and BeautifulSoup(bs4) Python libraries to automate data extraction from provided URLs.\r\n      • Implemented a robust website scraping solution with customizable parameters, including element types and\r\n      scraping depth(up to 3), to efficiently organize and manage the extracted data.\r\n      • To showcase, automated the translation of a large sample website to Hindi using Google Translate API.`,\r\n      // [\r\n      //   \"• Employed requests and BeautifulSoup(bs4) Python libraries to automate data extraction from provided URLs.\"\r\n      //   `• Implemented a robust website scraping solution with customizable parameters, including element types and\r\n      //   scraping depth(up to 3), to efficiently organize and manage the extracted data.`,\r\n      //   \"• To showcase, automated the translation of a large sample website to Hindi using Google Translate API.\"],\r\n    stack: ['Python', 'BeautifulSoup', 'Requests'],\r\n    sourceCode: 'https://github.com/jgdshkovi/webscrape_and_translate',\r\n    livePreview: 'https://jgdshkovi-abc.000webhostapp.com/',\r\n  },\r\n  {\r\n    name: 'Toxic Comment Detection (on Twitter)',\r\n    description:\r\n      `• Successfully fine-tuned the BERT model (transfer learning) by leveraging the Jigsaw Toxic comment dataset from\r\n      Kaggle with ∼159k observations, enhancing its performance for accurate toxic comment classification.\r\n      • Implemented an integrated system that extracts tweets from the user’s timeline using the Twitter API and\r\n      seamlessly passes them to the trained NLP model for analysis.\r\n      • The trained model achieved an validation accuracy of 95.8%. Classify the tweets, and take appropriate action\r\n      based on the returned toxicity score, contributing to a safer online environment.`,\r\n    stack: ['Python', 'Flask', 'Tweepy', 'NLP', 'Libraries'],\r\n    sourceCode: 'https://github.com/jgdshkovi/final_yr_proj',\r\n    livePreview: '',\r\n  },\r\n]\r\n\r\nconst skills = [\r\n  // skills can be added or removed\r\n  // if there are no skills, Skills section won't show up\r\n  'Programming Languages',\r\n  'Python',\r\n  'Java',\r\n  'JavaScript',\r\n  'SQL',\r\n  'HTML/CSS',\r\n  \r\n  'Libraries & Frameworks',\r\n  'Pandas',\r\n  'NumPy',\r\n  'Matplotlib',\r\n  'Tableau',\r\n  'AngularJS',\r\n  'Flask',\r\n\r\n  'Machine Learning',\r\n  'PyTorch',\r\n  'CNN',\r\n  'Linear & Logistic Regression',\r\n  'KNN',\r\n  // 'Data Cleaning',\r\n  'EDA',\r\n  'Computer Vision',\r\n  \r\n  'Technology',\r\n  'Azure',\r\n  'Git',\r\n  // 'BitBucket',\r\n  // 'Jenkins',\r\n  'Docker',\r\n  'RESTful API',\r\n  'Ubuntu',\r\n  'Google Colab',\r\n  'CI/CD',\r\n  'Problem Solving',\r\n  'Communication',\r\n  'MS Office Suite'\r\n]\r\n\r\nconst contact = {\r\n  // email is optional - if left empty Contact section won't show up\r\n  email: 'jagakovi@gmail.com',\r\n}\r\n\r\nconst experiences = [\r\n  {\r\n    title: 'Research Assistant (FADS)',\r\n    company: 'Indiana University',\r\n    location: 'Bloomington, Indiana',\r\n    duration: 'May 2024 - Present',\r\n    overview: 'Regulator Trends Analysis for Corporate Compliance Risk',\r\n    responsibilities: [\r\n      \"• IU Faculty Assistance in Data Science (FADS) fellowship.\",\r\n      \"• Working on developing a compliance risk analysis tool using NLP to identify regulatory enforcement trends.\",\r\n      \"• Web scraping system to gather data from 10+ public enforcement newsletters, in the absence of RSS feeds.\",\r\n      \"• Dashboard for real-time compliance insights & visualizations, using filters to correlate compliance areas over time.\"\r\n    ],\r\n  },\r\n  {\r\n    title: 'Software Engineer',\r\n    company: 'FIS Global',\r\n    location: 'Chennai, INDIA',\r\n    duration: 'Oct 2021 - Nov 2022',\r\n    overview: 'Decision Solutions, Core Banking Solutions, Angular, Agile/Scrum',\r\n    responsibilities: [\r\n      \"• Helped rewrite the ‘Customer Setup’ platform, modernizing the old IBM AS/400 mainframes using AngularJS.\",\r\n      \"• Seamlessly incorporated over 30 essential core banking modules - including ChexAdvisor, FraudChex, Customer Search, and Mergers/Acquisitions/Splits - enhancing the application’s functionality and efficiency.\",\r\n      \"• Reduced application access times by 60% through the implementation of GUI interfaces, reports, and dashboards.\",\r\n      \"• Engaged in cross-functional team collaboration, participated in product discussions and code reviews, and played a key role in both acceptance testing and go-live production builds.\"\r\n    ],\r\n  },\r\n  {\r\n    title: 'Summer Research Intern',\r\n    company: 'Bennett University',\r\n    location: 'Noida, INDIA',\r\n    duration: 'May 2020 - June 2020',\r\n    overview: 'PyTorch, Edge Computing, Custom k-means implementation',\r\n    responsibilities: [\r\n      \"• Successfully fine-tuned the BERT model (transfer learning) by leveraging the Jigsaw Toxic comment dataset from Kaggle with ∼159k observations, enhancing its performance for accurate toxic comment classification.\",\r\n      \"• Implemented an integrated system that extracts tweets from the user’s timeline using the Twitter API and seamlessly passes them to the trained NLP model for analysis.\",\r\n      \"• The trained model achieved an validation accuracy of 95.8%. Classify the tweets, and take appropriate action based on the returned toxicity score, contributing to a safer online environment.\"\r\n    ],\r\n  },\r\n  // Add more work experience items as needed\r\n];\r\n\r\nexport { header, about, projects, skills, contact, experiences }\r\n","import { useContext, useState } from 'react'\r\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\r\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { ThemeContext } from '../../contexts/theme'\r\nimport { projects, skills, contact, experiences } from '../../portfolio'\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\r\n  const [showNavList, setShowNavList] = useState(false)\r\n\r\n  const toggleNavList = () => setShowNavList(!showNavList)\r\n\r\n  return (\r\n    <nav className='center nav'>\r\n      <ul\r\n        style={{ display: showNavList ? 'flex' : null }}\r\n        className='nav__list'\r\n      >\r\n        {projects.length ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#projects'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              Projects\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n\r\n        {skills.length ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#skills'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              Skills\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n\r\n        {experiences.length ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#workexp'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              Work XP\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n\r\n        {contact.email ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#contact'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              Contact\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n      </ul>\r\n\r\n      <button\r\n        type='button'\r\n        onClick={toggleTheme}\r\n        className='btn btn--icon nav__theme'\r\n        aria-label='toggle theme'\r\n      >\r\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\r\n      </button>\r\n\r\n      <button\r\n        type='button'\r\n        onClick={toggleNavList}\r\n        className='btn btn--icon nav__hamburger'\r\n        aria-label='toggle navigation'\r\n      >\r\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\r\n      </button>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { header } from '../../portfolio'\r\nimport Navbar from '../Navbar/Navbar'\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n  const { homepage, title } = header\r\n\r\n  return (\r\n    <header className='header center'>\r\n      <h3>\r\n        {homepage ? (\r\n          <a href={homepage} className='link'>\r\n            {title}\r\n          </a>\r\n        ) : (\r\n          title\r\n        )}\r\n      </h3>\r\n      <Navbar />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import GitHubIcon from '@material-ui/icons/GitHub'\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\r\nimport { about } from '../../portfolio'\r\nimport './About.css'\r\n\r\nconst About = () => {\r\n  const { name, role1, role2, description, resume, social } = about\r\n\r\n  return (\r\n    <div className='about center'>\r\n      {name && (\r\n        <h1>\r\n          Hi, I am <span className='about__name'>{name}.</span>\r\n        </h1>\r\n      )}\r\n\r\n      {role1 && <h2 className='about__role'> {role1}<img src='../../../public/IUpng8.png' alt=''/></h2>}\r\n      {role2 && <h2 className='about__role'> {role2}</h2>}\r\n      <p className='about__desc'>{description && description}</p>\r\n\r\n      <div className='about__contact center'>\r\n        {resume && (\r\n          <a href={resume} target='_blank' rel='noopener noreferrer'>\r\n            <span type='button' className='btn btn--outline'>\r\n              Resume\r\n            </span>\r\n          </a>\r\n        )}\r\n\r\n        {social && (\r\n          <>\r\n            {social.github && (\r\n              <a\r\n                href={social.github}\r\n                aria-label='github'\r\n                className='link link--icon' target='_blank' rel='noopener noreferrer'\r\n              >\r\n                <GitHubIcon />\r\n              </a>\r\n            )}\r\n\r\n            {social.linkedin && (\r\n              <a\r\n                href={social.linkedin}\r\n                aria-label='linkedin'\r\n                className='link link--icon' target='_blank' rel='noopener noreferrer'\r\n              >\r\n                <LinkedInIcon />\r\n              </a>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import uniqid from 'uniqid'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport LaunchIcon from '@material-ui/icons/Launch'\r\nimport './ProjectContainer.css'\r\n\r\nconst ProjectContainer = ({ project }) => (\r\n  <div className='project'>\r\n    <h3>{project.name}</h3>\r\n\r\n    <p className='project__description'>{project.description}</p>\r\n    {project.stack && (\r\n      <ul className='project__stack'>\r\n        {project.stack.map((item) => (\r\n          <li key={uniqid()} className='project__stack-item'>\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )}\r\n\r\n    {project.sourceCode && (\r\n      <a\r\n        href={project.sourceCode}\r\n        aria-label='source code'\r\n        className='link link--icon' target='_blank' rel='noopener noreferrer'\r\n      >\r\n        <GitHubIcon />\r\n      </a>\r\n    )}\r\n\r\n    {project.livePreview && (\r\n      <a\r\n        href={project.livePreview}\r\n        aria-label='live preview'\r\n        className='link link--icon' target='_blank' rel='noopener noreferrer'\r\n      >\r\n        <LaunchIcon />\r\n      </a>\r\n    )}\r\n  </div>\r\n)\r\n\r\nexport default ProjectContainer\r\n","import uniqid from 'uniqid'\r\nimport { projects } from '../../portfolio'\r\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\r\nimport './Projects.css'\r\n\r\nconst Projects = () => {\r\n  if (!projects.length) return null\r\n\r\n  return (\r\n    <section id='projects' className='section projects'>\r\n      <h2 className='section__title'>Projects</h2>\r\n\r\n      <div className='projects__grid'>\r\n        {projects.map((project) => (\r\n          <ProjectContainer key={uniqid()} project={project} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import uniqid from 'uniqid'\r\nimport { skills } from '../../portfolio'\r\nimport './Skills.css'\r\n\r\nconst Skills = () => {\r\n  if (!skills.length) return null\r\n\r\n  return (\r\n    <section className='section skills' id='skills'>\r\n      <h2 className='section__title'>Skills</h2>\r\n      <ul className='skills__list'>\r\n        {skills.map((skill) => (\r\n          <li key={uniqid()} className='skills__list-item btn btn--plain'>\r\n            {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n","import React, { useEffect, useState } from 'react'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport './ScrollToTop.css'\r\n\r\nconst ScrollToTop = () => {\r\n  const [isVisible, setIsVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const toggleVisibility = () =>\r\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\r\n\r\n    window.addEventListener('scroll', toggleVisibility)\r\n    return () => window.removeEventListener('scroll', toggleVisibility)\r\n  }, [])\r\n\r\n  return isVisible ? (\r\n    <div className='scroll-top'>\r\n      <a href='#top'>\r\n        <ArrowUpwardIcon fontSize='large' />\r\n      </a>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport default ScrollToTop\r\n","import { contact } from '../../portfolio'\r\nimport './Contact.css'\r\n\r\nconst Contact = () => {\r\n  if (!contact.email) return null\r\n\r\n  return (\r\n    <section className='section contact center' id='contact'>\r\n      <h2 className='section__title'>Contact</h2>\r\n      <a href={`mailto:${contact.email}`}>\r\n        <span type='button' className='btn btn--outline'>\r\n          Email me\r\n        </span>\r\n      </a>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import './Footer.css'\r\n\r\nconst Footer = () => (\r\n  <footer className='footer'>\r\n    <a\r\n      href='https://github.com/jgdshkovi'\r\n      className='link footer__link'\r\n    >\r\n      ofc, made with ❤️\r\n    </a>\r\n  </footer>\r\n)\r\n\r\nexport default Footer\r\n","import React from 'react';\r\nimport uniqid from 'uniqid'\r\nimport './WorkExperienceTimeline.css';\r\nimport { experiences } from '../../portfolio'\r\n\r\nconst WorkExperienceTimeline = () => {\r\n  // Sample work experience data\r\n  if (!experiences.length) return null  \r\n\r\n  return (\r\n    <section className='section workexp' id='workexp'>\r\n    <div className='work-experience-timeline'>\r\n      {/* <h2>Work Experience</h2> */}\r\n      <h2 className='section__title'>Work Experience</h2>\r\n      <div className='timeline'>\r\n        {experiences.map((experience) => (\r\n          <div key={uniqid()} className='timeline-item'>\r\n            <div className='timeline-content'>\r\n              <div className='title-locatn'>\r\n                <div className='exp-title'>\r\n                    <h3>{experience.title} | {experience.company}</h3>\r\n                </div>\r\n                <div className='exp-locatn'>\r\n                    <p>{experience.location}</p>\r\n                </div>\r\n              </div>\r\n              <div className='overvw-duratn'>\r\n                <div className='overvw'>\r\n                    <h5>{experience.overview}</h5>\r\n                </div>\r\n                <div className='duratn'>\r\n                    <p>{experience.duration}</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <br/>\r\n\r\n              <ul className='responsibilities'>\r\n                {experience.responsibilities.map((responsibility) => (\r\n                  <li key={uniqid()}>{responsibility}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default WorkExperienceTimeline;\r\n","import { useContext } from 'react'\r\nimport { ThemeContext } from './contexts/theme'\r\nimport Header from './components/Header/Header'\r\nimport About from './components/About/About'\r\nimport Projects from './components/Projects/Projects'\r\nimport Skills from './components/Skills/Skills'\r\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\r\nimport Contact from './components/Contact/Contact'\r\nimport Footer from './components/Footer/Footer'\r\nimport WorkExperienceTimeline from './components/WorkExperienceTimeline/WorkExperienceTimeline'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  const [{ themeName }] = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div id='top' className={`${themeName} app`}>\r\n      <Header />\r\n\r\n      <main>\r\n        <About />\r\n        <WorkExperienceTimeline />\r\n        <Skills />\r\n        <Projects />\r\n        <Contact />\r\n      </main>\r\n\r\n      <ScrollToTop />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { render } from 'react-dom'\r\nimport App from './App'\r\nimport { ThemeProvider } from './contexts/theme'\r\nimport './index.css'\r\n\r\nrender(\r\n  <ThemeProvider>\r\n    <App />\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}